[
    {
    detail: undefined,
    id: "different-path-case",
    location: null,
    notes: [],
    pluginName: "angular-compiler",
    text: "Use \"Source/app/components/create-datamapper/source-selection/azurecosmosdb/azurecosmosDB-source-selection.component.scss\" instead of \"Source/app/components/create-datamapper/source-selection/azurecosmosdb/azurecosmosdb-source-selection.component.scss\" to avoid issues with case-sensitive file systems",
    },
    {
    detail: undefined,
    id: "different-path-case",
    location: null,
    notes: [],
    pluginName: "angular-compiler",
    text: "Use \"Source/app/authoring/authoring-main/tab/canvas/adf-data-mapper-canvas/adf-data-mapper-topbar/adf-data-mapper-setfrequency-sidenav/adf-data-mapper-setFrequency-sidenav.component.scss\" instead of \"Source/app/authoring/authoring-main/tab/canvas/adf-data-mapper-canvas/adf-data-mapper-topbar/adf-data-mapper-setfrequency-sidenav/adf-data-mapper-setfrequency-sidenav.component.scss\" to avoid issues with case-sensitive file systems",
    },
    {
    detail: undefined,
    id: "suspicious-boolean-not",
    location: {
      column: 29788,
      file: "External/jsonpath/index.js",
      length: 2,
      line: 3,
      lineText: "AccessorDataProperty:\"Object literal may not have data and accessor property with the same name\",AccessorGetSet:\"Object literal may not have multiple get/set accessors with the same name\",StrictLHSAssignment:\"Assignment to eval or arguments is not allowed in strict mode\",StrictLHSPostfix:\"Postfix increment/decrement may not have eval or arguments operand in strict mode\",StrictLHSPrefix:\"Prefix increment/decrement may not have eval or arguments operand in strict mode\",StrictReservedWord:\"Use of future reserved word in strict mode\"},eb={NonAsciiIdentifierStart:new RegExp(\"[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]\"),NonAsciiIdentifierPart:new RegExp(\"[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԧԱ-Ֆՙա-և֑-ׇֽֿׁׂׅׄא-תװ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺࠀ-࠭ࡀ-࡛ࢠࢢ-ࢬࣤ-ࣾऀ-ॣ०-९ॱ-ॷॹ-ॿঁ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-ৱਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୯ୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఁ-ఃఅ-ఌఎ-ఐఒ-నప-ళవ-హఽ-ౄె-ైొ-్ౕౖౘౙౠ-ౣ౦-౯ಂಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲംഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൎൗൠ-ൣ൦-൯ൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟෲෳก-ฺเ-๎๐-๙ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟ᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-៓ៗៜ៝០-៩᠋-᠍᠐-᠙ᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤜᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧙ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽ᳐-᳔᳒-ᳶᴀ-ᷦ᷼-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‌‍‿⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙゚ゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-ꚗꚟ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠧꡀ-ꡳꢀ-꣄꣐-꣙꣠-ꣷꣻ꤀-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺꩻꪀ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯪ꯬꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻ︀-️︠-︦︳︴﹍-﹏ﹰ-ﹴﹶ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]\")},fb={name:\"SyntaxTree\",processComment:function(a){var b,c;if(!(a.type===bb.Program&&a.body.length>0)){for(pb.trailingComments.length>0?pb.trailingComments[0].range[0]>=a.range[1]?(c=pb.trailingComments,pb.trailingComments=[]):pb.trailingComments.length=0:pb.bottomRightStack.length>0&&pb.bottomRightStack[pb.bottomRightStack.length-1].trailingComments&&pb.bottomRightStack[pb.bottomRightStack.length-1].trailingComments[0].range[0]>=a.range[1]&&(c=pb.bottomRightStack[pb.bottomRightStack.length-1].trailingComments,delete pb.bottomRightStack[pb.bottomRightStack.length-1].trailingComments);pb.bottomRightStack.length>0&&pb.bottomRightStack[pb.bottomRightStack.length-1].range[0]>=a.range[0];)b=pb.bottomRightStack.pop();b?b.leadingComments&&b.leadingComments[b.leadingComments.length-1].range[1]<=a.range[0]&&(a.leadingComments=b.leadingComments,delete b.leadingComments):pb.leadingComments.length>0&&pb.leadingComments[pb.leadingComments.length-1].range[1]<=a.range[0]&&(a.leadingComments=pb.leadingComments,pb.leadingComments=[]),c&&(a.trailingComments=c),pb.bottomRightStack.push(a)}},markEnd:function(a,b){return pb.range&&(a.range=[b.start,ib]),pb.loc&&(a.loc=new M(void 0===b.startLineNumber?b.lineNumber:b.startLineNumber,b.start-(void 0===b.startLineStart?b.lineStart:b.startLineStart),jb,ib-kb),this.postProcess(a)),pb.attachComment&&this.processComment(a),a},postProcess:function(a){return pb.source&&(a.loc.source=pb.source),a},createArrayExpression:function(a){return{type:bb.ArrayExpression,elements:a}},createAssignmentExpression:function(a,b,c){return{type:bb.AssignmentExpression,operator:a,left:b,right:c}},createBinaryExpression:function(a,b,c){return{type:\"||\"===a||\"&&\"===a?bb.LogicalExpression:bb.BinaryExpression,operator:a,left:b,right:c}},createBlockStatement:function(a){return{type:bb.BlockStatement,body:a}},createBreakStatement:function(a){return{type:bb.BreakStatement,label:a}},createCallExpression:function(a,b){return{type:bb.CallExpression,callee:a,arguments:b}},createCatchClause:function(a,b){return{type:bb.CatchClause,param:a,body:b}},createConditionalExpression:function(a,b,c){return{type:bb.ConditionalExpression,test:a,consequent:b,alternate:c}},createContinueStatement:function(a){return{type:bb.ContinueStatement,label:a}},createDebuggerStatement:function(){return{type:bb.DebuggerStatement}},createDoWhileStatement:function(a,b){return{type:bb.DoWhileStatement,body:a,test:b}},createEmptyStatement:function(){return{type:bb.EmptyStatement}},createExpressionStatement:function(a){return{type:bb.ExpressionStatement,expression:a}},createForStatement:function(a,b,c,d){return{type:bb.ForStatement,init:a,test:b,update:c,body:d}},createForInStatement:function(a,b,c){return{type:bb.ForInStatement,left:a,right:b,body:c,each:!1}},createFunctionDeclaration:function(a,b,c,d){return{type:bb.FunctionDeclaration,id:a,params:b,defaults:c,body:d,rest:null,generator:!1,expression:!1}},createFunctionExpression:function(a,b,c,d){return{type:bb.FunctionExpression,id:a,params:b,defaults:c,body:d,rest:null,generator:!1,expression:!1}},createIdentifier:function(a){return{type:bb.Identifier,name:a}},createIfStatement:function(a,b,c){return{type:bb.IfStatement,test:a,consequent:b,alternate:c}},createLabeledStatement:function(a,b){return{type:bb.LabeledStatement,label:a,body:b}},createLiteral:function(a){return{type:bb.Literal,value:a.value,raw:gb.slice(a.start,a.end)}},createMemberExpression:function(a,b,c){return{type:bb.MemberExpression,computed:\"[\"===a,object:b,property:c}},createNewExpression:function(a,b){return{type:bb.NewExpression,callee:a,arguments:b}},createObjectExpression:function(a){return{type:bb.ObjectExpression,properties:a}},createPostfixExpression:function(a,b){return{type:bb.UpdateExpression,operator:a,argument:b,prefix:!1}},createProgram:function(a){return{type:bb.Program,body:a}},createProperty:function(a,b,c){return{type:bb.Property,key:b,value:c,kind:a}},createReturnStatement:function(a){return{type:bb.ReturnStatement,argument:a}},createSequenceExpression:function(a){return{type:bb.SequenceExpression,expressions:a}},createSwitchCase:function(a,b){return{type:bb.SwitchCase,test:a,consequent:b}},createSwitchStatement:function(a,b){return{type:bb.SwitchStatement,discriminant:a,cases:b}},createThisExpression:function(){return{type:bb.ThisExpression}},createThrowStatement:function(a){return{type:bb.ThrowStatement,argument:a}},createTryStatement:function(a,b,c,d){return{type:bb.TryStatement,block:a,guardedHandlers:b,handlers:c,finalizer:d}},createUnaryExpression:function(a,b){return\"++\"===a||\"--\"===a?{type:bb.UpdateExpression,operator:a,argument:b,prefix:!0}:{type:bb.UnaryExpression,operator:a,argument:b,prefix:!0}},createVariableDeclaration:function(a,b){return{type:bb.VariableDeclaration,declarations:a,kind:b}},createVariableDeclarator:function(a,b){return{type:bb.VariableDeclarator,id:a,init:b}},createWhileStatement:function(a,b){return{type:bb.WhileStatement,test:a,body:b}},createWithStatement:function(a,b){return{type:bb.WithStatement,object:a,body:b}}},a.version=\"1.2.2\",a.tokenize=Ya,a.parse=Za,a.Syntax=function(){var a,b={};\"function\"==typeof Object.create&&(b=Object.create(null));for(a in bb)bb.hasOwnProperty(a)&&(b[a]=bb[a]);return\"function\"==typeof Object.freeze&&Object.freeze(b),b}()})},{}],1:[function(a,b,c){(function(d){var e=function(){function a(){this.yy={}}var b={trace:function(){},yy:{},symbols_:{error:2,JSON_PATH:3,DOLLAR:4,PATH_COMPONENTS:5,LEADING_CHILD_MEMBER_EXPRESSION:6,PATH_COMPONENT:7,MEMBER_COMPONENT:8,SUBSCRIPT_COMPONENT:9,CHILD_MEMBER_COMPONENT:10,DESCENDANT_MEMBER_COMPONENT:11,DOT:12,MEMBER_EXPRESSION:13,DOT_DOT:14,STAR:15,IDENTIFIER:16,SCRIPT_EXPRESSION:17,INTEGER:18,END:19,CHILD_SUBSCRIPT_COMPONENT:20,DESCENDANT_SUBSCRIPT_COMPONENT:21,\"[\":22,SUBSCRIPT:23,\"]\":24,SUBSCRIPT_EXPRESSION:25,SUBSCRIPT_EXPRESSION_LIST:26,SUBSCRIPT_EXPRESSION_LISTABLE:27,\",\":28,STRING_LITERAL:29,ARRAY_SLICE:30,FILTER_EXPRESSION:31,QQ_STRING:32,Q_STRING:33,$accept:0,$end:1},terminals_:{2:\"error\",4:\"DOLLAR\",12:\"DOT\",14:\"DOT_DOT\",15:\"STAR\",16:\"IDENTIFIER\",17:\"SCRIPT_EXPRESSION\",18:\"INTEGER\",19:\"END\",22:\"[\",24:\"]\",28:\",\",30:\"ARRAY_SLICE\",31:\"FILTER_EXPRESSION\",32:\"QQ_STRING\",33:\"Q_STRING\"},productions_:[0,[3,1],[3,2],[3,1],[3,2],[5,1],[5,2],[7,1],[7,1],[8,1],[8,1],[10,2],[6,1],[11,2],[13,1],[13,1],[13,1],[13,1],[13,1],[9,1],[9,1],[20,3],[21,4],[23,1],[23,1],[26,1],[26,3],[27,1],[27,1],[27,1],[25,1],[25,1],[25,1],[29,1],[29,1]],performAction:function(a,b,d,e,f,g,h){e.ast||(e.ast=c,c.initialize());var i=g.length-1;switch(f){case 1:return e.ast.set({expression:{type:\"root\",value:g[i]}}),e.ast.unshift(),e.ast.yield();case 2:return e.ast.set({expression:{type:\"root\",value:g[i-1]}}),e.ast.unshift(),e.ast.yield();case 3:return e.ast.unshift(),e.ast.yield();case 4:return e.ast.set({operation:\"member\",scope:\"child\",expression:{type:\"identifier\",value:g[i-1]}}),e.ast.unshift(),e.ast.yield();case 5:case 6:break;case 7:e.ast.set({operation:\"member\"}),e.ast.push();break;case 8:e.ast.set({operation:\"subscript\"}),e.ast.push();break;case 9:e.ast.set({scope:\"child\"});break;case 10:e.ast.set({scope:\"descendant\"});break;case 11:break;case 12:e.ast.set({scope:\"child\",operation:\"member\"});break;case 13:break;case 14:e.ast.set({expression:{type:\"wildcard\",value:g[i]}});break;case 15:e.ast.set({expression:{type:\"identifier\",value:g[i]}});break;case 16:e.ast.set({expression:{type:\"script_expression\",value:g[i]}});break;case 17:e.ast.set({expression:{type:\"numeric_literal\",value:parseInt(g[i])}});break;case 18:break;case 19:e.ast.set({scope:\"child\"});break;case 20:e.ast.set({scope:\"descendant\"});break;case 21:case 22:case 23:break;case 24:g[i].length>1?e.ast.set({expression:{type:\"union\",value:g[i]}}):this.$=g[i];break;case 25:this.$=[g[i]];break;case 26:this.$=g[i-2].concat(g[i]);break;case 27:this.$={expression:{type:\"numeric_literal\",value:parseInt(g[i])}},e.ast.set(this.$);break;case 28:this.$={expression:{type:\"string_literal\",value:g[i]}},e.ast.set(this.$);break;case 29:this.$={expression:{type:\"slice\",value:g[i]}},e.ast.set(this.$);break;case 30:this.$={expression:{type:\"wildcard\",value:g[i]}},e.ast.set(this.$);break;case 31:this.$={expression:{type:\"script_expression\",value:g[i]}},e.ast.set(this.$);break;case 32:this.$={expression:{type:\"filter_expression\",value:g[i]}},e.ast.set(this.$);break;case 33:case 34:this.$=g[i]}},table:[{3:1,4:[1,2],6:3,13:4,15:[1,5],16:[1,6],17:[1,7],18:[1,8],19:[1,9]},{1:[3]},{1:[2,1],5:10,7:11,8:12,9:13,10:14,11:15,12:[1,18],14:[1,19],20:16,21:17,22:[1,20]},{1:[2,3],5:21,7:11,8:12,9:13,10:14,11:15,12:[1,18],14:[1,19],20:16,21:17,22:[1,20]},{1:[2,12],12:[2,12],14:[2,12],22:[2,12]},{1:[2,14],12:[2,14],14:[2,14],22:[2,14]},{1:[2,15],12:[2,15],14:[2,15],22:[2,15]},{1:[2,16],12:[2,16],14:[2,16],22:[2,16]},{1:[2,17],12:[2,17],14:[2,17],22:[2,17]},{1:[2,18],12:[2,18],14:[2,18],22:[2,18]},{1:[2,2],7:22,8:12,9:13,10:14,11:15,12:[1,18],14:[1,19],20:16,21:17,22:[1,20]},{1:[2,5],12:[2,5],14:[2,5],22:[2,5]},{1:[2,7],12:[2,7],14:[2,7],22:[2,7]},{1:[2,8],12:[2,8],14:[2,8],22:[2,8]},{1:[2,9],12:[2,9],14:[2,9],22:[2,9]},{1:[2,10],12:[2,10],14:[2,10],22:[2,10]},{1:[2,19],12:[2,19],14:[2,19],22:[2,19]},{1:[2,20],12:[2,20],14:[2,20],22:[2,20]},{13:23,15:[1,5],16:[1,6],17:[1,7],18:[1,8],19:[1,9]},{13:24,15:[1,5],16:[1,6],17:[1,7],18:[1,8],19:[1,9],22:[1,25]},{15:[1,29],17:[1,30],18:[1,33],23:26,25:27,26:28,27:32,29:34,30:[1,35],31:[1,31],32:[1,36],33:[1,37]},{1:[2,4],7:22,8:12,9:13,10:14,11:15,12:[1,18],14:[1,19],20:16,21:17,22:[1,20]},{1:[2,6],12:[2,6],14:[2,6],22:[2,6]},{1:[2,11],12:[2,11],14:[2,11],22:[2,11]},{1:[2,13],12:[2,13],14:[2,13],22:[2,13]},{15:[1,29],17:[1,30],18:[1,33],23:38,25:27,26:28,27:32,29:34,30:[1,35],31:[1,31],32:[1,36],33:[1,37]},{24:[1,39]},{24:[2,23]},{24:[2,24],28:[1,40]},{24:[2,30]},{24:[2,31]},{24:[2,32]},{24:[2,25],28:[2,25]},{24:[2,27],28:[2,27]},{24:[2,28],28:[2,28]},{24:[2,29],28:[2,29]},{24:[2,33],28:[2,33]},{24:[2,34],28:[2,34]},{24:[1,41]},{1:[2,21],12:[2,21],14:[2,21],22:[2,21]},{18:[1,33],27:42,29:34,30:[1,35],32:[1,36],33:[1,37]},{1:[2,22],12:[2,22],14:[2,22],22:[2,22]},{24:[2,26],28:[2,26]}],defaultActions:{27:[2,23],29:[2,30],30:[2,31],31:[2,32]},parseError:function(a,b){if(!b.recoverable)throw new Error(a);this.trace(a)},parse:function(a){function b(){var a;return a=c.lexer.lex()||m,\"number\"!=typeof a&&(a=c.symbols_[a]||a),a}var c=this,d=[0],e=[null],f=[],g=this.table,h=\"\",i=0,j=0,k=0,l=2,m=1,n=f.slice.call(arguments,1);this.lexer.setInput(a),this.lexer.yy=this.yy,this.yy.lexer=this.lexer,this.yy.parser=this,void 0===this.lexer.yylloc&&(this.lexer.yylloc={});var o=this.lexer.yylloc;f.push(o);var p=this.lexer.options&&this.lexer.options.ranges;\"function\"==typeof this.yy.parseError?this.parseError=this.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var q,r,s,t,u,v,w,x,y,z={};;){if(s=d[d.length-1],this.defaultActions[s]?t=this.defaultActions[s]:(null!==q&&void 0!==q||(q=b()),t=g[s]&&g[s][q]),void 0===t||!t.length||!t[0]){var A=\"\";y=[];for(v in g[s])this.terminals_[v]&&v>l&&y.push(\"'\"+this.terminals_[v]+\"'\");A=this.lexer.showPosition?\"Parse error on line \"+(i+1)+\":\\n\"+this.lexer.showPosition()+\"\\nExpecting \"+y.join(\", \")+\", got '\"+(this.terminals_[q]||q)+\"'\":\"Parse error on line \"+(i+1)+\": Unexpected \"+(q==m?\"end of input\":\"'\"+(this.terminals_[q]||q)+\"'\"),this.parseError(A,{text:this.lexer.match,token:this.terminals_[q]||q,line:this.lexer.yylineno,loc:o,expected:y})}if(t[0]instanceof Array&&t.length>1)throw new Error(\"Parse Error: multiple actions possible at state: \"+s+\", token: \"+q);switch(t[0]){case 1:d.push(q),e.push(this.lexer.yytext),f.push(this.lexer.yylloc),d.push(t[1]),q=null,r?(q=r,r=null):(j=this.lexer.yyleng,h=this.lexer.yytext,i=this.lexer.yylineno,o=this.lexer.yylloc,k>0&&k--);break;case 2:if(w=this.productions_[t[1]][1],z.$=e[e.length-w],z._$={first_line:f[f.length-(w||1)].first_line,last_line:f[f.length-1].last_line,first_column:f[f.length-(w||1)].first_column,last_column:f[f.length-1].last_column},p&&(z._$.range=[f[f.length-(w||1)].range[0],f[f.length-1].range[1]]),void 0!==(u=this.performAction.apply(z,[h,j,i,this.yy,t[1],e,f].concat(n))))return u;w&&(d=d.slice(0,-1*w*2),e=e.slice(0,-1*w),f=f.slice(0,-1*w)),d.push(this.productions_[t[1]][0]),e.push(z.$),f.push(z._$),x=g[d[d.length-2]][d[d.length-1]],d.push(x);break;case 3:return!0}}return!0}},c={initialize:function(){this._nodes=[],this._node={},this._stash=[]},set:function(a){for(var b in a)this._node[b]=a[b];return this._node},node:function(a){return arguments.length&&(this._node=a),this._node},push:function(){this._nodes.push(this._node),this._node={}},unshift:function(){this._nodes.unshift(this._node),this._node={}},yield:function(){var a=this._nodes;return this.initialize(),a}},d=function(){return{EOF:1,parseError:function(a,b){if(!this.yy.parser)throw new Error(a);this.yy.parser.parseError(a,b)},setInput:function(a){return this._input=a,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match=\"\",this.conditionStack=[\"INITIAL\"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var a=this._input[0];return this.yytext+=a,this.yyleng++,this.offset++,this.match+=a,this.matched+=a,a.match(/(?:\\r\\n?|\\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),a},unput:function(a){var b=a.length,c=a.split(/(?:\\r\\n?|\\n)/g);this._input=a+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-b-1),this.offset-=b;var d=this.match.split(/(?:\\r\\n?|\\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),c.length-1&&(this.yylineno-=c.length-1);var e=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:c?(c.length===d.length?this.yylloc.first_column:0)+d[d.length-c.length].length-c[0].length:this.yylloc.first_column-b},this.options.ranges&&(this.yylloc.range=[e[0],e[0]+this.yyleng-b]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},less:function(a){this.unput(this.match.slice(a))},pastInput:function(){var a=this.matched.substr(0,this.matched.length-this.match.length);return(a.length>20?\"...\":\"\")+a.substr(-20).replace(/\\n/g,\"\")},upcomingInput:function(){var a=this.match;return a.length<20&&(a+=this._input.substr(0,20-a.length)),(a.substr(0,20)+(a.length>20?\"...\":\"\")).replace(/\\n/g,\"\")},showPosition:function(){var a=this.pastInput(),b=new Array(a.length+1).join(\"-\");return a+this.upcomingInput()+\"\\n\"+b+\"^\"},test_match:function(a,b){var c,d,e;if(this.options.backtrack_lexer&&(e={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(e.yylloc.range=this.yylloc.range.slice(0))),d=a[0].match(/(?:\\r\\n?|\\n).*/g),d&&(this.yylineno+=d.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:d?d[d.length-1].length-d[d.length-1].match(/\\r?\\n?/)[0].length:this.yylloc.last_column+a[0].length},this.yytext+=a[0],this.match+=a[0],this.matches=a,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(a[0].length),this.matched+=a[0],c=this.performAction.call(this,this.yy,this,b,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),c)return c;if(this._backtrack){for(var f in e)this[f]=e[f];return!1}return!1},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var a,b,c,d;this._more||(this.yytext=\"\",this.match=\"\");for(var e=this._currentRules(),f=0;f<e.length;f++)if((c=this._input.match(this.rules[e[f]]))&&(!b||c[0].length>b[0].length)){if(b=c,d=f,this.options.backtrack_lexer){if(!1!==(a=this.test_match(c,e[f])))return a;if(this._backtrack){b=!1;continue}return!1}if(!this.options.flex)break}return b?!1!==(a=this.test_match(b,e[d]))&&a:\"\"===this._input?this.EOF:this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". Unrecognized text.\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},lex:function(){var a=this.next();return a||this.lex()},begin:function(a){this.conditionStack.push(a)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(a){return a=this.conditionStack.length-1-Math.abs(a||0),a>=0?this.conditionStack[a]:\"INITIAL\"},pushState:function(a){this.begin(a)},stateStackSize:function(){return this.conditionStack.length},options:{},performAction:function(a,b,c,d){switch(c){case 0:return 4;case 1:return 14;case 2:return 12;case 3:return 15;case 4:return 16;case 5:return 22;case 6:return 24;case 7:return 28;case 8:return 30;case 9:return 18;case 10:return b.yytext=b.yytext.substr(1,b.yyleng-2),32;case 11:return b.yytext=b.yytext.substr(1,b.yyleng-2),33;case 12:return 17;case 13:return 31}},rules:[/^(?:\\$)/,/^(?:\\.\\.)/,/^(?:\\.)/,/^(?:\\*)/,/^(?:[a-zA-Z_]+[a-zA-Z0-9_]*)/,/^(?:\\[)/,/^(?:\\])/,/^(?:,)/,/^(?:((-?(?:0|[1-9][0-9]*)))?\\:((-?(?:0|[1-9][0-9]*)))?(\\:((-?(?:0|[1-9][0-9]*)))?)?)/,/^(?:(-?(?:0|[1-9][0-9]*)))/,/^(?:\"(?:\\\\[\"bfnrt\\/\\\\]|\\\\u[a-fA-F0-9]{4}|[^\"\\\\])*\")/,/^(?:'(?:\\\\['bfnrt\\/\\\\]|\\\\u[a-fA-F0-9]{4}|[^'\\\\])*')/,/^(?:\\(.+?\\)(?=\\]))/,/^(?:\\?\\(.+?\\)(?=\\]))/],conditions:{INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13],inclusive:!0}}}}();return b.lexer=d,a.prototype=b,b.Parser=a,new a}();void 0!==a&&void 0!==c&&(c.parser=e,c.Parser=e.Parser,c.parse=function(){return e.parse.apply(e,arguments)},c.main=function(b){b[1]||(console.log(\"Usage: \"+b[0]+\" FILE\"),d.exit(1));var e=a(\"fs\").readFileSync(a(\"path\").normalize(b[1]),\"utf8\");return c.parser.parse(e)},void 0!==b&&a.main===b&&c.main(d.argv.slice(1)))}).call(this,a(\"_process\"))},{_process:14,fs:12,path:13}],2:[function(a,b,c){b.exports={identifier:\"[a-zA-Z_]+[a-zA-Z0-9_]*\",integer:\"-?(?:0|[1-9][0-9]*)\",qq_string:'\"(?:\\\\\\\\[\"bfnrt/\\\\\\\\]|\\\\\\\\u[a-fA-F0-9]{4}|[^\"\\\\\\\\])*\"',q_string:\"'(?:\\\\\\\\['bfnrt/\\\\\\\\]|\\\\\\\\u[a-fA-F0-9]{4}|[^'\\\\\\\\])*'\"}},{}],3:[function(a,b,c){var d=a(\"./dict\"),e=a(\"fs\"),f={lex:{macros:{esc:\"\\\\\\\\\",int:d.integer},rules:[[\"\\\\$\",\"return 'DOLLAR'\"],[\"\\\\.\\\\.\",\"return 'DOT_DOT'\"],[\"\\\\.\",\"return 'DOT'\"],[\"\\\\*\",\"return 'STAR'\"],[d.identifier,\"return 'IDENTIFIER'\"],[\"\\\\[\",\"return '['\"],[\"\\\\]\",\"return ']'\"],[\",\",\"return ','\"],[\"({int})?\\\\:({int})?(\\\\:({int})?)?\",\"return 'ARRAY_SLICE'\"],[\"{int}\",\"return 'INTEGER'\"],[d.qq_string,\"yytext = yytext.substr(1,yyleng-2); return 'QQ_STRING';\"],[d.q_string,\"yytext = yytext.substr(1,yyleng-2); return 'Q_STRING';\"],[\"\\\\(.+?\\\\)(?=\\\\])\",\"return 'SCRIPT_EXPRESSION'\"],[\"\\\\?\\\\(.+?\\\\)(?=\\\\])\",\"return 'FILTER_EXPRESSION'\"]]},start:\"JSON_PATH\",bnf:{JSON_PATH:[[\"DOLLAR\",'yy.ast.set({ expression: { type: \"root\", value: $1 } }); yy.ast.unshift(); return yy.ast.yield()'],[\"DOLLAR PATH_COMPONENTS\",'yy.ast.set({ expression: { type: \"root\", value: $1 } }); yy.ast.unshift(); return yy.ast.yield()'],[\"LEADING_CHILD_MEMBER_EXPRESSION\",\"yy.ast.unshift(); return yy.ast.yield()\"],[\"LEADING_CHILD_MEMBER_EXPRESSION PATH_COMPONENTS\",'yy.ast.set({ operation: \"member\", scope: \"child\", expression: { type: \"identifier\", value: $1 }}); yy.ast.unshift(); return yy.ast.yield()']],PATH_COMPONENTS:[[\"PATH_COMPONENT\",\"\"],[\"PATH_COMPONENTS PATH_COMPONENT\",\"\"]],PATH_COMPONENT:[[\"MEMBER_COMPONENT\",'yy.ast.set({ operation: \"member\" }); yy.ast.push()'],[\"SUBSCRIPT_COMPONENT\",'yy.ast.set({ operation: \"subscript\" }); yy.ast.push() ']],MEMBER_COMPONENT:[[\"CHILD_MEMBER_COMPONENT\",'yy.ast.set({ scope: \"child\" })'],[\"DESCENDANT_MEMBER_COMPONENT\",'yy.ast.set({ scope: \"descendant\" })']],CHILD_MEMBER_COMPONENT:[[\"DOT MEMBER_EXPRESSION\",\"\"]],LEADING_CHILD_MEMBER_EXPRESSION:[[\"MEMBER_EXPRESSION\",'yy.ast.set({ scope: \"child\", operation: \"member\" })']],DESCENDANT_MEMBER_COMPONENT:[[\"DOT_DOT MEMBER_EXPRESSION\",\"\"]],MEMBER_EXPRESSION:[[\"STAR\",'yy.ast.set({ expression: { type: \"wildcard\", value: $1 } })'],[\"IDENTIFIER\",'yy.ast.set({ expression: { type: \"identifier\", value: $1 } })'],[\"SCRIPT_EXPRESSION\",'yy.ast.set({ expression: { type: \"script_expression\", value: $1 } })'],[\"INTEGER\",'yy.ast.set({ expression: { type: \"numeric_literal\", value: parseInt($1) } })'],[\"END\",\"\"]],SUBSCRIPT_COMPONENT:[[\"CHILD_SUBSCRIPT_COMPONENT\",'yy.ast.set({ scope: \"child\" })'],[\"DESCENDANT_SUBSCRIPT_COMPONENT\",'yy.ast.set({ scope: \"descendant\" })']],CHILD_SUBSCRIPT_COMPONENT:[[\"[ SUBSCRIPT ]\",\"\"]],DESCENDANT_SUBSCRIPT_COMPONENT:[[\"DOT_DOT [ SUBSCRIPT ]\",\"\"]],SUBSCRIPT:[[\"SUBSCRIPT_EXPRESSION\",\"\"],[\"SUBSCRIPT_EXPRESSION_LIST\",'$1.length > 1? yy.ast.set({ expression: { type: \"union\", value: $1 } }) : $$ = $1']],SUBSCRIPT_EXPRESSION_LIST:[[\"SUBSCRIPT_EXPRESSION_LISTABLE\",\"$$ = [$1]\"],[\"SUBSCRIPT_EXPRESSION_LIST , SUBSCRIPT_EXPRESSION_LISTABLE\",\"$$ = $1.concat($3)\"]],SUBSCRIPT_EXPRESSION_LISTABLE:[[\"INTEGER\",'$$ = { expression: { type: \"numeric_literal\", value: parseInt($1) } }; yy.ast.set($$)'],[\"STRING_LITERAL\",'$$ = { expression: { type: \"string_literal\", value: $1 } }; yy.ast.set($$)'],[\"ARRAY_SLICE\",'$$ = { expression: { type: \"slice\", value: $1 } }; yy.ast.set($$)']],SUBSCRIPT_EXPRESSION:[[\"STAR\",'$$ = { expression: { type: \"wildcard\", value: $1 } }; yy.ast.set($$)'],[\"SCRIPT_EXPRESSION\",'$$ = { expression: { type: \"script_expression\", value: $1 } }; yy.ast.set($$)'],[\"FILTER_EXPRESSION\",'$$ = { expression: { type: \"filter_expression\", value: $1 } }; yy.ast.set($$)']],STRING_LITERAL:[[\"QQ_STRING\",\"$$ = $1\"],[\"Q_STRING\",\"$$ = $1\"]]}};e.readFileSync&&(f.moduleInclude=e.readFileSync(a.resolve(\"../include/module.js\")),f.actionInclude=e.readFileSync(a.resolve(\"../include/action.js\"))),b.exports=f},{\"./dict\":2,fs:12}],4:[function(a,b,c){function d(b,c,d){var e=a(\"./index\"),f=m.parse(c).body[0].expression,g=j(f,{\"@\":b.value}),h=d.replace(/\\{\\{\\s*value\\s*\\}\\}/g,g),i=e.nodes(b.value,h);return i.forEach(function(a){a.path=b.path.concat(a.path.slice(1))}),i}function e(a){return Array.isArray(a)}function f(a){return a&&!(a instanceof Array)&&a instanceof Object}function g(a){return function(b,c,d,g){var h=b.value,i=b.path,j=[],k=function(b,h){e(b)?(b.forEach(function(a,b){j.length>=g||d(b,a,c)&&j.push({path:h.concat(b),value:a})}),b.forEach(function(b,c){j.length>=g||a&&k(b,h.concat(c))})):f(b)&&(this.keys(b).forEach(function(a){j.length>=g||d(a,b[a],c)&&j.push({path:h.concat(a),value:b[a]})}),this.keys(b).forEach(function(c){j.length>=g||a&&k(b[c],h.concat(c))}))}.bind(this);return k(h,i),j}}function h(a){return function(b,c,d){return this.descend(c,b.expression.value,a,d)}}function i(a){return function(b,c,d){return this.traverse(c,b.expression.value,a,d)}}function j(){try{return o.apply(this,arguments)}catch(a){}}function k(a){return a=a.filter(function(a){return a}),p(a,function(a){return a.path.map(function(a){return String(a).replace(\"-\",\"--\")}).join(\"-\")})}function l(a){var b=String(a);return b.match(/^-?[0-9]+$/)?parseInt(b):null}var m=a(\"./aesprim\"),n=a(\"./slice\"),o=a(\"static-eval\"),p=a(\"underscore\").uniq,q=function(){return this.initialize.apply(this,arguments)};q.prototype.initialize=function(){this.traverse=g(!0),this.descend=g()},q.prototype.keys=Object.keys,q.prototype.resolve=function(a){var b=[a.operation,a.scope,a.expression.type].join(\"-\"),c=this._fns[b];if(!c)throw new Error(\"couldn't resolve key: \"+b);return c.bind(this)},q.prototype.register=function(a,b){if(!b instanceof Function)throw new Error(\"handler must be a function\");this._fns[a]=b},q.prototype._fns={\"member-child-identifier\":function(a,b){var c=a.expression.value,d=b.value;if(d instanceof Object&&c in d)return[{value:d[c],path:b.path.concat(c)}]},\"member-descendant-identifier\":i(function(a,b,c){return a==c}),\"subscript-child-numeric_literal\":h(function(a,b,c){return a===c}),\"member-child-numeric_literal\":h(function(a,b,c){return String(a)===String(c)}),\"subscript-descendant-numeric_literal\":i(function(a,b,c){return a===c}),\"member-child-wildcard\":h(function(){return!0}),\"member-descendant-wildcard\":i(function(){return!0}),\"subscript-descendant-wildcard\":i(function(){return!0}),\"subscript-child-wildcard\":h(function(){return!0}),\"subscript-child-slice\":function(a,b){if(e(b.value)){var c=a.expression.value.split(\":\").map(l),d=b.value.map(function(a,c){return{value:a,path:b.path.concat(c)}});return n.apply(null,[d].concat(c))}},\"subscript-child-union\":function(a,b){var c=[];return a.expression.value.forEach(function(a){var d={operation:\"subscript\",scope:\"child\",expression:a.expression},e=this.resolve(d),f=e(d,b);f&&(c=c.concat(f))},this),k(c)},\"subscript-descendant-union\":function(b,c,d){var e=a(\"..\"),f=this,g=[];return e.nodes(c,\"$..*\").slice(1).forEach(function(a){g.length>=d||b.expression.value.forEach(function(b){var c={operation:\"subscript\",scope:\"child\",expression:b.expression},d=f.resolve(c),e=d(c,a);g=g.concat(e)})}),k(g)},\"subscript-child-filter_expression\":function(a,b,c){var d=a.expression.value.slice(2,-1),e=m.parse(d).body[0].expression,f=function(a,b){return j(e,{\"@\":b})};return this.descend(b,null,f,c)},\"subscript-descendant-filter_expression\":function(a,b,c){var d=a.expression.value.slice(2,-1),e=m.parse(d).body[0].expression,f=function(a,b){return j(e,{\"@\":b})};return this.traverse(b,null,f,c)},\"subscript-child-script_expression\":function(a,b){return d(b,a.expression.value.slice(1,-1),\"$[{{value}}]\")},\"member-child-script_expression\":function(a,b){return d(b,a.expression.value.slice(1,-1),\"$.{{value}}\")},\"member-descendant-script_expression\":function(a,b){return d(b,a.expression.value.slice(1,-1),\"$..value\")}},q.prototype._fns[\"subscript-child-string_literal\"]=q.prototype._fns[\"member-child-identifier\"],q.prototype._fns[\"member-descendant-numeric_literal\"]=q.prototype._fns[\"subscript-descendant-string_literal\"]=q.prototype._fns[\"member-descendant-identifier\"],b.exports=q},{\"..\":\"jsonpath\",\"./aesprim\":\"./aesprim\",\"./index\":5,\"./slice\":7,\"static-eval\":15,underscore:12}],5:[function(a,b,c){function d(a){return\"[object String]\"==Object.prototype.toString.call(a)}var e=a(\"assert\"),f=a(\"./dict\"),g=a(\"./parser\"),h=a(\"./handlers\"),i=function(){this.initialize.apply(this,arguments)};i.prototype.initialize=function(){this.parser=new g,this.handlers=new h},i.prototype.parse=function(a){return e.ok(d(a),\"we need a path\"),this.parser.parse(a)},i.prototype.parent=function(a,b){e.ok(a instanceof Object,\"obj needs to be an object\"),e.ok(b,\"we need a path\");var c=this.nodes(a,b)[0];c.path.pop();return this.value(a,c.path)},i.prototype.apply=function(a,b,c){e.ok(a instanceof Object,\"obj needs to be an object\"),e.ok(b,\"we need a path\"),e.equal(typeof c,\"function\",\"fn needs to be function\");var d=this.nodes(a,b).sort(function(a,b){return b.path.length-a.path.length});return d.forEach(function(b){var d=b.path.pop(),e=this.value(a,this.stringify(b.path)),f=b.value=c.call(a,e[d]);e[d]=f},this),d},i.prototype.value=function(a,b,c){if(e.ok(a instanceof Object,\"obj needs to be an object\"),e.ok(b,\"we need a path\"),arguments.length>=3){var d=this.nodes(a,b).shift();if(!d)return this._vivify(a,b,c);var f=d.path.slice(-1).shift();this.parent(a,this.stringify(d.path))[f]=c}return this.query(a,this.stringify(b),1).shift()},i.prototype._vivify=function(a,b,c){var d=this;e.ok(a instanceof Object,\"obj needs to be an object\"),e.ok(b,\"we need a path\");var f=this.parser.parse(b).map(function(a){return a.expression.value}),g=function(b,c){var e=b.pop(),f=d.value(a,b);f||(g(b.concat(),\"string\"==typeof e?{}:[]),f=d.value(a,b)),f[e]=c};return g(f,c),this.query(a,b)[0]},i.prototype.query=function(a,b,c){return e.ok(a instanceof Object,\"obj needs to be an object\"),e.ok(d(b),\"we need a path\"),this.nodes(a,b,c).map(function(a){return a.value})},i.prototype.paths=function(a,b,c){return e.ok(a instanceof Object,\"obj needs to be an object\"),e.ok(b,\"we need a path\"),this.nodes(a,b,c).map(function(a){return a.path})},i.prototype.nodes=function(a,b,c){if(e.ok(a instanceof Object,\"obj needs to be an object\"),e.ok(b,\"we need a path\"),0===c)return[];var d=this.parser.parse(b),f=this.handlers,g=[{path:[\"$\"],value:a}],h=[];return d.length&&\"root\"==d[0].expression.type&&d.shift(),d.length?(d.forEach(function(a,b){if(!(h.length>=c)){var e=f.resolve(a),i=[];g.forEach(function(f){if(!(h.length>=c)){var g=e(a,f,c);b==d.length-1?h=h.concat(g||[]):i=i.concat(g||[])}}),g=i}}),c?h.slice(0,c):h):g},",
      namespace: "",
      suggestion: "(!b)",
        },
    notes: [
            {
        location: null,
        text: "The code \"!x instanceof y\" is parsed as \"(!x) instanceof y\". You need to insert parentheses to get \"!(x instanceof y)\" instead.",
            },
        ],
    pluginName: "",
    text: "Suspicious use of the \"!\" operator inside the \"instanceof\" operator",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 28,
      file: "Source/app/apis/pipeline-support-files.service.ts",
      length: 5,
      line: 125,
      lineText: "            const zip = new JSZip();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/apis/pipeline-support-files.service.ts",
          length: 10,
          line: 18,
          lineText: "import * as JSZip from 'jszip';",
          namespace: "",
          suggestion: "JSZip",
                },
        text: "Consider changing \"JSZip\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Constructing \"JSZip\" will crash at run-time because it's an import namespace object, not a constructor",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 33,
      file: "Source/app/app-routing.module.ts",
      length: 1,
      line: 75,
      lineText: "            const splashScreen = $('#splash-container');",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/app-routing.module.ts",
          length: 6,
          line: 6,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 8,
      file: "Source/app/app.component.ts",
      length: 1,
      line: 262,
      lineText: "        $('#splash-container').remove();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/app.component.ts",
          length: 6,
          line: 5,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 39,
      file: "Source/app/app.component.ts",
      length: 16,
      line: 311,
      lineText: "        const madridIconObserver = new FontFaceObserver('madrid-icon');",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/app.component.ts",
          length: 21,
          line: 4,
          lineText: "import * as FontFaceObserver from 'fontfaceobserver';",
          namespace: "",
          suggestion: "FontFaceObserver",
                },
        text: "Consider changing \"FontFaceObserver\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Constructing \"FontFaceObserver\" will crash at run-time because it's an import namespace object, not a constructor",
    },
    {
    detail: undefined,
    id: "different-path-case",
    location: {
      column: 69,
      file: "Source/app/authoring/authoring-main/tab/canvas/adf-data-mapper-canvas/adf-data-mapper-topbar/authoring-adf-data-mapper-topbar.component.ts",
      length: 87,
      line: 38,
      lineText: "import { AdfCDCDataMapperArtifactSetFrequencySidenavComponent } from './adf-data-mapper-setfrequency-sidenav/adf-data-mapper-setfrequency-sidenav.component';",
      namespace: "",
      suggestion: "",
        },
    notes: [],
    pluginName: "",
    text: "Use \"Source/app/authoring/authoring-main/tab/canvas/adf-data-mapper-canvas/adf-data-mapper-topbar/adf-data-mapper-setfrequency-sidenav/adf-data-mapper-setFrequency-sidenav.component.ts\" instead of \"Source/app/authoring/authoring-main/tab/canvas/adf-data-mapper-canvas/adf-data-mapper-topbar/adf-data-mapper-setfrequency-sidenav/adf-data-mapper-setfrequency-sidenav.component.ts\" to avoid issues with case-sensitive file systems",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 48,
      file: "Source/app/authoring/authoring-main/tab/panel/dataflow/dataflow-debug-graph/dataflow-debug-graph.component.ts",
      length: 5,
      line: 330,
      lineText: "                    this.verticalBarChart = new Chart(canvas, graph);",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/authoring/authoring-main/tab/panel/dataflow/dataflow-debug-graph/dataflow-debug-graph.component.ts",
          length: 10,
          line: 2,
          lineText: "import * as Chart from 'chart.js';",
          namespace: "",
          suggestion: "Chart",
                },
        text: "Consider changing \"Chart\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Constructing \"Chart\" will crash at run-time because it's an import namespace object, not a constructor",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 31,
      file: "Source/app/authoring/authoring-main/tab/panel/dataflow/dataflow-dialog/dataflow-dialog.component.ts",
      length: 1,
      line: 86,
      lineText: "        this.dialogContainer = $(this._element.nativeElement.parentElement.parentElement);",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/authoring/authoring-main/tab/panel/dataflow/dataflow-dialog/dataflow-dialog.component.ts",
          length: 6,
          line: 3,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "different-path-case",
    location: {
      column: 69,
      file: "Source/app/authoring/authoring.module.ts",
      length: 159,
      line: 325,
      lineText: "import { AdfCDCDataMapperArtifactSetFrequencySidenavComponent } from './authoring-main/tab/canvas/adf-data-mapper-canvas/adf-data-mapper-topbar/adf-data-mapper-setfrequency-sidenav/adf-data-mapper-setfrequency-sidenav.component';",
      namespace: "",
      suggestion: "",
        },
    notes: [],
    pluginName: "",
    text: "Use \"Source/app/authoring/authoring-main/tab/canvas/adf-data-mapper-canvas/adf-data-mapper-topbar/adf-data-mapper-setfrequency-sidenav/adf-data-mapper-setFrequency-sidenav.component.ts\" instead of \"Source/app/authoring/authoring-main/tab/canvas/adf-data-mapper-canvas/adf-data-mapper-topbar/adf-data-mapper-setfrequency-sidenav/adf-data-mapper-setfrequency-sidenav.component.ts\" to avoid issues with case-sensitive file systems",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 35,
      file: "Source/app/authoring/component/recent-runs/recent-runs.component.ts",
      length: 6,
      line: 308,
      lineText: "                const oneDayMore = moment().add(1, 'days');",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/authoring/component/recent-runs/recent-runs.component.ts",
          length: 11,
          line: 20,
          lineText: "import * as moment from 'moment';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 68,
      file: "Source/app/authoring/component/transformations/data-preview-panel/data-preview-data-converter.ts",
      length: 6,
      line: 221,
      lineText: "                const dateValue = (cell && cell.isLosslessNumber) ? moment(new Date(cell)).utc().format('YYYY-MM-DD').toString() : cell;",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/authoring/component/transformations/data-preview-panel/data-preview-data-converter.ts",
          length: 11,
          line: 4,
          lineText: "import * as moment from 'moment';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 48,
      file: "Source/app/components/app-mainlayout/app-mainlayout.component.ts",
      length: 1,
      line: 923,
      lineText: "                                const buttons = $(this.mainContentDiv.nativeElement).find('button:enabled, [tabindex]:not([tabindex=\"-1\"])');",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/components/app-mainlayout/app-mainlayout.component.ts",
          length: 6,
          line: 28,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 26,
      file: "Source/app/components/gallery/public-template-local.provider.ts",
      length: 5,
      line: 45,
      lineText: "        const jsZip = new JSZip();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/components/gallery/public-template-local.provider.ts",
          length: 10,
          line: 3,
          lineText: "import * as JSZip from 'jszip';",
          namespace: "",
          suggestion: "JSZip",
                },
        text: "Consider changing \"JSZip\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Constructing \"JSZip\" will crash at run-time because it's an import namespace object, not a constructor",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 28,
      file: "Source/app/components/gallery/template.provider.ts",
      length: 5,
      line: 71,
      lineText: "            const zip = new JSZip();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/components/gallery/template.provider.ts",
          length: 10,
          line: 4,
          lineText: "import * as JSZip from 'jszip';",
          namespace: "",
          suggestion: "JSZip",
                },
        text: "Consider changing \"JSZip\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Constructing \"JSZip\" will crash at run-time because it's an import namespace object, not a constructor",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 28,
      file: "Source/app/components/gallery/template.service.ts",
      length: 5,
      line: 936,
      lineText: "            const zip = new JSZip();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/components/gallery/template.service.ts",
          length: 10,
          line: 49,
          lineText: "import * as JSZip from 'jszip';",
          namespace: "",
          suggestion: "JSZip",
                },
        text: "Consider changing \"JSZip\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Constructing \"JSZip\" will crash at run-time because it's an import namespace object, not a constructor",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 26,
      file: "Source/app/extensibility/utils/expression.util.ts",
      length: 4,
      line: 17,
      lineText: "    return calcExpression(jsep(expr.substring(1, expr.length - 1)), propertyBag);",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/extensibility/utils/expression.util.ts",
          length: 9,
          line: 2,
          lineText: "import * as jsep from 'jsep';",
          namespace: "",
          suggestion: "jsep",
                },
        text: "Consider changing \"jsep\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"jsep\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 36,
      file: "Source/app/home/adf-home-recent-resources/adf-home-recent-resources.component.ts",
      length: 6,
      line: 180,
      lineText: "            const timestampMoment = moment(timestamp);",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/home/adf-home-recent-resources/adf-home-recent-resources.component.ts",
          length: 11,
          line: 3,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 30,
      file: "Source/app/integrationruntime/ir-authoring/ir-datamovement/selfhosted-nodes/selfhosted-nodes.component.ts",
      length: 6,
      line: 1220,
      lineText: "            const timeValue = moment(this.irAutoUpgradeSettings.scheduledUpdateDate).startOf('day').add(this.irAutoUpgradeSettings.upgradeTime);",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/integrationruntime/ir-authoring/ir-datamovement/selfhosted-nodes/selfhosted-nodes.component.ts",
          length: 11,
          line: 13,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 8,
      file: "Source/app/logger/logger.publish-payload-event.ts",
      length: 1,
      line: 11,
      lineText: "        _(nameds)",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/logger/logger.publish-payload-event.ts",
          length: 6,
          line: 4,
          lineText: "import * as _ from 'lodash';",
          namespace: "",
          suggestion: "_",
                },
        text: "Consider changing \"_\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"_\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 28,
      file: "Source/app/management/management-armtemplate/management-armtemplate.component.ts",
      length: 5,
      line: 448,
      lineText: "            const zip = new JSZip();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/management/management-armtemplate/management-armtemplate.component.ts",
          length: 10,
          line: 23,
          lineText: "import * as JSZip from 'jszip';",
          namespace: "",
          suggestion: "JSZip",
                },
        text: "Consider changing \"JSZip\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Constructing \"JSZip\" will crash at run-time because it's an import namespace object, not a constructor",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 27,
      file: "Source/app/model/monitoring/a365-monitoring-data-provider/ams-data-provider/ams-base-monitoring-data-provider.ts",
      length: 6,
      line: 137,
      lineText: "        const valueAfter = moment(currentDateRange.after).utc().format('YYYY-MM-DD[T]HH:mm:ss').toString() + 'Z';",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/model/monitoring/a365-monitoring-data-provider/ams-data-provider/ams-base-monitoring-data-provider.ts",
          length: 11,
          line: 3,
          lineText: "import * as moment from 'moment';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 30,
      file: "Source/app/model/monitoring/activity-run-data-provider-base.ts",
      length: 6,
      line: 34,
      lineText: "            lastUpdatedAfter: moment().subtract(1, 'day').toDate(),",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/model/monitoring/activity-run-data-provider-base.ts",
          length: 11,
          line: 4,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 30,
      file: "Source/app/model/monitoring/adf-data-mapper-detail-monitoring-data-provider.ts",
      length: 6,
      line: 46,
      lineText: "            lastUpdatedAfter: moment().subtract(1, 'day').toDate(),",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/model/monitoring/adf-data-mapper-detail-monitoring-data-provider.ts",
          length: 11,
          line: 4,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 30,
      file: "Source/app/model/monitoring/adf-data-mapper-monitoring-data-provider.ts",
      length: 6,
      line: 32,
      lineText: "            lastUpdatedAfter: moment().subtract(1, 'day').toDate(),",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/model/monitoring/adf-data-mapper-monitoring-data-provider.ts",
          length: 11,
          line: 5,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 30,
      file: "Source/app/model/monitoring/link-connections-monitoring-data-provider.ts",
      length: 6,
      line: 41,
      lineText: "            lastUpdatedAfter: moment().subtract(1, 'day').toDate(),",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/model/monitoring/link-connections-monitoring-data-provider.ts",
          length: 11,
          line: 7,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 30,
      file: "Source/app/model/monitoring/link-tables-monitoring-data-provider.ts",
      length: 6,
      line: 40,
      lineText: "            lastUpdatedAfter: moment().subtract(1, 'day').toDate(),",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/model/monitoring/link-tables-monitoring-data-provider.ts",
          length: 11,
          line: 5,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 30,
      file: "Source/app/model/monitoring/pipeline-run-data-provider.ts",
      length: 6,
      line: 518,
      lineText: "            lastUpdatedAfter: moment().add(-45, 'days').toDate(),",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/model/monitoring/pipeline-run-data-provider.ts",
          length: 11,
          line: 1,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 30,
      file: "Source/app/model/monitoring/trigger-run-data-provider.ts",
      length: 6,
      line: 174,
      lineText: "            lastUpdatedAfter: moment().add(-45, 'days').toDate(),",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/model/monitoring/trigger-run-data-provider.ts",
          length: 11,
          line: 11,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 30,
      file: "Source/app/model/monitoring/trigger-run-group-data-provider.ts",
      length: 6,
      line: 83,
      lineText: "            lastUpdatedAfter: moment().add(-45, 'days').toDate(),",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/model/monitoring/trigger-run-group-data-provider.ts",
          length: 11,
          line: 7,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 32,
      file: "Source/app/monitoring/a365-monitoring/a365-components/choose-target-application/choose-target-application.component.ts",
      length: 6,
      line: 261,
      lineText: "        this.dateFilter.after = moment(new Date()).subtract(this.detectTimeWindow, 'days').toDate();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/a365-monitoring/a365-components/choose-target-application/choose-target-application.component.ts",
          length: 11,
          line: 15,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 46,
      file: "Source/app/monitoring/a365-monitoring/a365-components/kql-request-details/kql-request-details.component.ts",
      length: 6,
      line: 396,
      lineText: "                this.errorMessageCreateTime = moment(this.kqlJobDetails.endTimeDate).format('MM-DD-YY hh:mm:ss A');",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/a365-monitoring/a365-components/kql-request-details/kql-request-details.component.ts",
          length: 11,
          line: 7,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 56,
      file: "Source/app/monitoring/a365-monitoring/a365-components/kql-requests/kql-requests.component.ts",
      length: 6,
      line: 713,
      lineText: "        this.dateFilter.after = this.dateFilter.after ? moment(this.dateFilter.after.toString()).tz(this.timeZone).toDate() : this.dateFilter.after;",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/a365-monitoring/a365-components/kql-requests/kql-requests.component.ts",
          length: 11,
          line: 12,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 36,
      file: "Source/app/monitoring/a365-monitoring/a365-components/kusto-pool-details/kusto-pool-details.component.ts",
      length: 6,
      line: 407,
      lineText: "            this.dateFilter.after = moment(this.dateFilter.after.toString()).tz(this.timeZone).toDate();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/a365-monitoring/a365-components/kusto-pool-details/kusto-pool-details.component.ts",
          length: 11,
          line: 15,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 60,
      file: "Source/app/monitoring/a365-monitoring/a365-components/kusto-pool-list/kusto-pool-list.component.ts",
      length: 6,
      line: 580,
      lineText: "            this.dateFilter.after = this.dateFilter.after ? moment(this.dateFilter.after.toString()).tz(this.timeZone).toDate() : this.dateFilter.after;",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/a365-monitoring/a365-components/kusto-pool-list/kusto-pool-list.component.ts",
          length: 11,
          line: 18,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 36,
      file: "Source/app/monitoring/a365-monitoring/a365-components/scope-job-list/scope-job-list.component.ts",
      length: 6,
      line: 613,
      lineText: "            this.dateFilter.after = moment(this.dateFilter.after.toString()).tz(this.timeZone).toDate();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/a365-monitoring/a365-components/scope-job-list/scope-job-list.component.ts",
          length: 11,
          line: 20,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 33,
      file: "Source/app/monitoring/a365-monitoring/a365-components/scope-pool-details/scope-pool-details.component.ts",
      length: 6,
      line: 336,
      lineText: "            const momentBefore = moment(dateFilterWithExtraHour.before.toString()).add(1, 'hours');",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/a365-monitoring/a365-components/scope-pool-details/scope-pool-details.component.ts",
          length: 11,
          line: 15,
          lineText: "import * as moment from 'moment';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 35,
      file: "Source/app/monitoring/a365-monitoring/a365-components/spark-job-comparsion/spark-job-comparsion.component.ts",
      length: 6,
      line: 280,
      lineText: "        const timeInMilliseconds = moment().valueOf();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/a365-monitoring/a365-components/spark-job-comparsion/spark-job-comparsion.component.ts",
          length: 11,
          line: 16,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 94,
      file: "Source/app/monitoring/a365-monitoring/a365-components/spark-job-input-output/spark-job-input-output.component.ts",
      length: 6,
      line: 664,
      lineText: "            rowData.properties.modified = properties != null && properties.modified != null ? moment(properties.modified).format(monitoringSummaryConst.timeStandardFormat) : stringResources.NA;",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/a365-monitoring/a365-components/spark-job-input-output/spark-job-input-output.component.ts",
          length: 11,
          line: 11,
          lineText: "import * as moment from 'moment';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 60,
      file: "Source/app/monitoring/a365-monitoring/a365-components/spark-job-list/spark-job-list.component.ts",
      length: 6,
      line: 841,
      lineText: "            this.dateFilter.after = this.dateFilter.after ? moment(this.dateFilter.after.toString()).tz(this.timeZone).toDate() : this.dateFilter.after;",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/a365-monitoring/a365-components/spark-job-list/spark-job-list.component.ts",
          length: 11,
          line: 18,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 40,
      file: "Source/app/monitoring/a365-monitoring/a365-components/spark-job-view/spark-job-view.component.ts",
      length: 6,
      line: 777,
      lineText: "        this.sparkJobPanel.submitTime = moment(this.sparkJob.submitTime).format(monitoringSummaryConst.timeStandardFormat);",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/a365-monitoring/a365-components/spark-job-view/spark-job-view.component.ts",
          length: 11,
          line: 12,
          lineText: "import * as moment from 'moment';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 36,
      file: "Source/app/monitoring/a365-monitoring/a365-components/spark-pool-details/spark-pool-details.component.ts",
      length: 6,
      line: 706,
      lineText: "            this.dateFilter.after = moment(this.dateFilter.after.toString()).tz(this.timeZone).toDate();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/a365-monitoring/a365-components/spark-pool-details/spark-pool-details.component.ts",
          length: 11,
          line: 16,
          lineText: "import * as moment from 'moment';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 60,
      file: "Source/app/monitoring/a365-monitoring/a365-components/spark-pool-list/spark-pool-list.component.ts",
      length: 6,
      line: 627,
      lineText: "            this.dateFilter.after = this.dateFilter.after ? moment(this.dateFilter.after.toString()).tz(this.timeZone).toDate() : this.dateFilter.after;",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/a365-monitoring/a365-components/spark-pool-list/spark-pool-list.component.ts",
          length: 11,
          line: 16,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 46,
      file: "Source/app/monitoring/a365-monitoring/a365-components/sql-pool-details/sql-pool-base.component.ts",
      length: 6,
      line: 364,
      lineText: "        this.failedRequestsDateFilter.after = moment(new Date()).subtract(15, 'minutes').tz(this.timeZone).toDate();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/a365-monitoring/a365-components/sql-pool-details/sql-pool-base.component.ts",
          length: 11,
          line: 15,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 45,
      file: "Source/app/monitoring/a365-monitoring/a365-components/sql-pool-details/sql-pool-details.component.ts",
      length: 6,
      line: 525,
      lineText: "        this.dataProcessedDateFilter.after = moment(new Date()).subtract(15, 'minutes').tz(this.timeZone).toDate();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/a365-monitoring/a365-components/sql-pool-details/sql-pool-details.component.ts",
          length: 11,
          line: 12,
          lineText: "import * as moment from 'moment';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 60,
      file: "Source/app/monitoring/a365-monitoring/a365-components/sql-pool-list/sql-pool-list.component.ts",
      length: 6,
      line: 738,
      lineText: "            this.dateFilter.after = this.dateFilter.after ? moment(this.dateFilter.after.toString()).tz(this.timeZone).toDate() : this.dateFilter.after;",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/a365-monitoring/a365-components/sql-pool-list/sql-pool-list.component.ts",
          length: 11,
          line: 25,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 42,
      file: "Source/app/monitoring/a365-monitoring/a365-components/sql-request-details/sql-standard-details/sql-request-details.component.ts",
      length: 6,
      line: 817,
      lineText: "            this.errorMessageCreateTime = moment(this.errorMessageCreateTime) ? moment(this.errorMessageCreateTime).format('MM-DD-YY hh:mm:ss A') : this.errorMessageCreateTime;",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/a365-monitoring/a365-components/sql-request-details/sql-standard-details/sql-request-details.component.ts",
          length: 11,
          line: 18,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 56,
      file: "Source/app/monitoring/a365-monitoring/a365-components/sql-requests/sql-requests-base-component.ts",
      length: 6,
      line: 186,
      lineText: "        this.dateFilter.after = this.dateFilter.after ? moment(this.dateFilter.after.toString()).tz(this.timeZone).toDate() : this.dateFilter.after;",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/a365-monitoring/a365-components/sql-requests/sql-requests-base-component.ts",
          length: 11,
          line: 14,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 17,
      file: "Source/app/monitoring/components/fixed-pill-filter/fixed-pill-filter.component.ts",
      length: 1,
      line: 199,
      lineText: "            && !($(e.srcElement).hasClass('PillFilterComponent') || $(e.srcElement).closest('.PillFilterComponent').length) && !($(e.srcElement).hasClass('PillFilterComponent')",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/components/fixed-pill-filter/fixed-pill-filter.component.ts",
          length: 6,
          line: 6,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 69,
      file: "Source/app/monitoring/components/monitoring-adf-data-mapper/adf-data-mapper-detail/adf-data-mapper-chart/adf-data-mapper-chart.component.ts",
      length: 6,
      line: 208,
      lineText: "                chartOptions.hAxis['ticks'] = [{ v: earliestDate, f: moment(earliestDate).format('MMM D hh:mm a') }];",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/components/monitoring-adf-data-mapper/adf-data-mapper-detail/adf-data-mapper-chart/adf-data-mapper-chart.component.ts",
          length: 11,
          line: 6,
          lineText: "import * as moment from 'moment';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 56,
      file: "Source/app/monitoring/components/monitoring-adf-data-mapper/monitoring-adf-data-mapper-base.component.ts",
      length: 6,
      line: 95,
      lineText: "        this.dateFilter.after = this.dateFilter.after ? moment(this.dateFilter.after.toString()).tz(this.timeZone).toDate() : this.dateFilter.after;",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/components/monitoring-adf-data-mapper/monitoring-adf-data-mapper-base.component.ts",
          length: 11,
          line: 8,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 12,
      file: "Source/app/monitoring/components/monitoring-alerts/metricalerts-configurelogic/metricalerts-configurelogic.component.ts",
      length: 5,
      line: 365,
      lineText: "        new Chart(this.metricLineChartCanvas.getContext('2d'), {",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/components/monitoring-alerts/metricalerts-configurelogic/metricalerts-configurelogic.component.ts",
          length: 10,
          line: 4,
          lineText: "import * as Chart from 'chart.js';",
          namespace: "",
          suggestion: "Chart",
                },
        text: "Consider changing \"Chart\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Constructing \"Chart\" will crash at run-time because it's an import namespace object, not a constructor",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 29,
      file: "Source/app/monitoring/components/monitoring-dashboard/monitoring-dashboard.component.ts",
      length: 6,
      line: 177,
      lineText: "        let startTimeStamp = moment(this.dateFilter.after);",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/components/monitoring-dashboard/monitoring-dashboard.component.ts",
          length: 11,
          line: 7,
          lineText: "import * as moment from 'moment';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 37,
      file: "Source/app/monitoring/components/monitoring-dashboard/monitoring-dashboard.component.ts",
      length: 5,
      line: 308,
      lineText: "        this.pieChartComponent = new Chart(this.pieChart.nativeElement.getContext('2d'), {",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/components/monitoring-dashboard/monitoring-dashboard.component.ts",
          length: 10,
          line: 8,
          lineText: "import * as Chart from 'chart.js';",
          namespace: "",
          suggestion: "Chart",
                },
        text: "Consider changing \"Chart\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Constructing \"Chart\" will crash at run-time because it's an import namespace object, not a constructor",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 56,
      file: "Source/app/monitoring/components/monitoring-link-connections/monitoring-link-status-base.component.ts",
      length: 6,
      line: 95,
      lineText: "        this.dateFilter.after = this.dateFilter.after ? moment(this.dateFilter.after.toString()).tz(this.timeZone).toDate() : this.dateFilter.after;",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/components/monitoring-link-connections/monitoring-link-status-base.component.ts",
          length: 11,
          line: 8,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 21,
      file: "Source/app/monitoring/components/monitoring-timeline/monitoring-timeline.component.ts",
      length: 6,
      line: 300,
      lineText: "            else if (moment(this.startDate).format(momentFormatConst.Date) === moment(this.endDate).format(momentFormatConst.Date)",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/components/monitoring-timeline/monitoring-timeline.component.ts",
          length: 11,
          line: 8,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 20,
      file: "Source/app/monitoring/components/monitoring-timeline/monitoring-timeline.util.ts",
      length: 6,
      line: 7,
      lineText: "    const dateStr = moment(getCustomDate(date, time, locale)).format(timeFormatWithSeconds);",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/components/monitoring-timeline/monitoring-timeline.util.ts",
          length: 11,
          line: 5,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 17,
      file: "Source/app/monitoring/components/removable-pill-filter/removable-pill-filter.component.ts",
      length: 1,
      line: 178,
      lineText: "            && !($(e.srcElement).hasClass('PillFilterComponent') || $(e.srcElement).closest('.PillFilterComponent').length) && !($(e.srcElement).hasClass('PillFilterComponent')",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/components/removable-pill-filter/removable-pill-filter.component.ts",
          length: 6,
          line: 8,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 60,
      file: "Source/app/monitoring/monitoring-main/activity-run/activity-run.component.ts",
      length: 6,
      line: 456,
      lineText: "            let runEnd = this.selectedPipelineRun.runEnd || moment().add(1, 'days').toDate();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/monitoring-main/activity-run/activity-run.component.ts",
          length: 11,
          line: 3,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 9,
      file: "Source/app/monitoring/monitoring-main/activity-run/column-projection-dialog.component.ts",
      length: 1,
      line: 172,
      lineText: "        ($(this.element.nativeElement.parentElement)).css('max-width', 'none');",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/monitoring-main/activity-run/column-projection-dialog.component.ts",
          length: 6,
          line: 4,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 56,
      file: "Source/app/monitoring/monitoring-main/dataflow-run/dataflow-chart-data/dataflow-chart-data-provider.component.ts",
      length: 6,
      line: 139,
      lineText: "        this.dateFilter.after = this.dateFilter.after ? moment(this.dateFilter.after.toString()).tz(this.timeZone).toDate() : this.dateFilter.after;",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/monitoring-main/dataflow-run/dataflow-chart-data/dataflow-chart-data-provider.component.ts",
          length: 11,
          line: 5,
          lineText: "import * as moment from 'moment';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 125,
      file: "Source/app/monitoring/monitoring-main/monitoring-integrationruntime/monitoring-ir-item/monitoring-ir-item.component.ts",
      length: 6,
      line: 1810,
      lineText: "                                    ? format(stringResources.IR_ExpiredDate, IntegrationRuntimeAdapters.LocalizeMomentString(moment(item.expiryTime)))",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/monitoring-main/monitoring-integrationruntime/monitoring-ir-item/monitoring-ir-item.component.ts",
          length: 11,
          line: 5,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 37,
      file: "Source/app/monitoring/monitoring-main/monitoring-performance-tuning/performance-tuning-card/performance-tuning-card.component.ts",
      length: 5,
      line: 40,
      lineText: "        this.barChartComponent = new Chart(this.barChart.nativeElement.getContext('2d'), {",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/monitoring-main/monitoring-performance-tuning/performance-tuning-card/performance-tuning-card.component.ts",
          length: 10,
          line: 2,
          lineText: "import * as Chart from 'chart.js';",
          namespace: "",
          suggestion: "Chart",
                },
        text: "Consider changing \"Chart\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Constructing \"Chart\" will crash at run-time because it's an import namespace object, not a constructor",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 15,
      file: "Source/app/monitoring/monitoring-main/monitoring-trigger-runs/monitoring-trigger-runs-main/tumbling-window-trigger-dependency/tumbling-window-trigger-dependency.component.ts",
      length: 6,
      line: 623,
      lineText: "        return moment(time).tz(this.timeZone).format('MM/DD/YYYY, hh:mm:ss A');",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/monitoring-main/monitoring-trigger-runs/monitoring-trigger-runs-main/tumbling-window-trigger-dependency/tumbling-window-trigger-dependency.component.ts",
          length: 11,
          line: 22,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 68,
      file: "Source/app/monitoring/monitoring-main/pipeline-run/pipeline-run.component.ts",
      length: 6,
      line: 812,
      lineText: "                    let runEnd = this.selectedPipelineRun.runEnd || moment().add(1, 'days').toDate();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/monitoring/monitoring-main/pipeline-run/pipeline-run.component.ts",
          length: 11,
          line: 36,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 48,
      file: "Source/app/multi-contexts/components/app-context-mainlayout.component.ts",
      length: 1,
      line: 900,
      lineText: "                                const buttons = $(this.mainContentDiv.nativeElement).find('button:enabled, [tabindex]:not([tabindex=\"-1\"])');",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/multi-contexts/components/app-context-mainlayout.component.ts",
          length: 6,
          line: 28,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 33,
      file: "Source/app/multi-contexts/modules/app/app.context-routing.module.ts",
      length: 1,
      line: 90,
      lineText: "            const splashScreen = $('#splash-container');",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/multi-contexts/modules/app/app.context-routing.module.ts",
          length: 6,
          line: 14,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 8,
      file: "Source/app/multi-contexts/modules/app/app.context.component.ts",
      length: 1,
      line: 286,
      lineText: "        $('#splash-container').remove();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/multi-contexts/modules/app/app.context.component.ts",
          length: 6,
          line: 5,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 39,
      file: "Source/app/multi-contexts/modules/app/app.context.component.ts",
      length: 16,
      line: 350,
      lineText: "        const madridIconObserver = new FontFaceObserver('madrid-icon');",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/multi-contexts/modules/app/app.context.component.ts",
          length: 21,
          line: 4,
          lineText: "import * as FontFaceObserver from 'fontfaceobserver';",
          namespace: "",
          suggestion: "FontFaceObserver",
                },
        text: "Consider changing \"FontFaceObserver\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Constructing \"FontFaceObserver\" will crash at run-time because it's an import namespace object, not a constructor",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 8,
      file: "Source/app/overview/overview-main/overview-video/overview-video.component.ts",
      length: 1,
      line: 32,
      lineText: "        $('.video-image').replaceWith(iframe);",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/overview/overview-main/overview-video/overview-video.component.ts",
          length: 6,
          line: 4,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 79,
      file: "Source/app/services/a365-monitoring-scope-job-detail.service.ts",
      length: 6,
      line: 97,
      lineText: "        rowData.modified = properties != null && properties.modified != null ? moment(properties.modified).format(monitoringSummaryConst.timeStandardFormat) : stringResources.NA;",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/services/a365-monitoring-scope-job-detail.service.ts",
          length: 11,
          line: 18,
          lineText: "import * as moment from 'moment';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 37,
      file: "Source/app/services/autosave/autosave.service.ts",
      length: 6,
      line: 77,
      lineText: "            this.lastSavedTime$.next(moment());",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/services/autosave/autosave.service.ts",
          length: 11,
          line: 7,
          lineText: "import * as moment from 'moment';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 24,
      file: "Source/app/services/diagnostic.service.ts",
      length: 5,
      line: 58,
      lineText: "        const zip = new JSZip();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/services/diagnostic.service.ts",
          length: 10,
          line: 8,
          lineText: "import * as JSZip from 'jszip';",
          namespace: "",
          suggestion: "JSZip",
                },
        text: "Consider changing \"JSZip\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Constructing \"JSZip\" will crash at run-time because it's an import namespace object, not a constructor",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 30,
      file: "Source/app/services/execution-client.service.ts",
      length: 6,
      line: 285,
      lineText: "            const startDate = moment().toDate().toISOString();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/services/execution-client.service.ts",
          length: 11,
          line: 12,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 26,
      file: "Source/app/services/git/git-client.service.ts",
      length: 5,
      line: 135,
      lineText: "        const jsZip = new JSZip();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/services/git/git-client.service.ts",
          length: 10,
          line: 2,
          lineText: "import * as JSZip from 'jszip';",
          namespace: "",
          suggestion: "JSZip",
                },
        text: "Consider changing \"JSZip\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Constructing \"JSZip\" will crash at run-time because it's an import namespace object, not a constructor",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 18,
      file: "Source/app/services/notification.service.ts",
      length: 6,
      line: 41,
      lineText: "            time: moment(),",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/services/notification.service.ts",
          length: 11,
          line: 1,
          lineText: "import * as moment from 'moment';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 52,
      file: "Source/app/services/sandbox-run.service.ts",
      length: 6,
      line: 210,
      lineText: "        let runStart = this.pipelineRun.runStart || moment().add(-1, 'days').toDate();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/services/sandbox-run.service.ts",
          length: 11,
          line: 6,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 9,
      file: "Source/app/shared/components/activity-details/activity-details-base.ts",
      length: 1,
      line: 31,
      lineText: "        ($(this._element.nativeElement.parentElement)).css('max-width', 'none');",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/components/activity-details/activity-details-base.ts",
          length: 6,
          line: 3,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 132,
      file: "Source/app/shared/components/activity-logs/activity-logs.component.ts",
      length: 6,
      line: 401,
      lineText: "        const response = irLogs ? await this._integrationRuntimeDataPlaneService.sendActivityLogAsync(this.activityData.irName, '', moment(currentTime).add(-30, 'd').utc().toDate().toISOString(), moment(currentTime).utc().toDate().toISOString()) : await this._integrationRuntimeDataPlaneService.sendActivityLogAsync(this.activityData.irName, this.activityData.activityRunId, this.activityData.startTime.toString(), this.activityData.endTime.toString());",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/components/activity-logs/activity-logs.component.ts",
          length: 11,
          line: 6,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 8,
      file: "Source/app/shared/components/autosize-textarea/autosize-textarea.component.ts",
      length: 1,
      line: 67,
      lineText: "        $(this.measurerComponent).css('display', 'none'); // so UI doesn't show the measurer space",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/components/autosize-textarea/autosize-textarea.component.ts",
          length: 6,
          line: 2,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 79,
      file: "Source/app/shared/components/billing-box/billing-box.component.ts",
      length: 6,
      line: 308,
      lineText: "            this.runDataProvider.changeDateRange(this.runStart, this.runEnd || moment().toDate());",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/components/billing-box/billing-box.component.ts",
          length: 11,
          line: 15,
          lineText: "import * as moment from 'moment';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 31,
      file: "Source/app/shared/components/copy-activity-details/copy-activity-details.component.ts",
      length: 1,
      line: 586,
      lineText: "        this.dialogContainer = $(this._element.nativeElement.parentElement.parentElement);",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/components/copy-activity-details/copy-activity-details.component.ts",
          length: 6,
          line: 6,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 36,
      file: "Source/app/shared/components/credential/credential.component.ts",
      length: 1,
      line: 369,
      lineText: "            const invalidControls = $('#credentialForm').find('.ng-invalid');",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/components/credential/credential.component.ts",
          length: 6,
          line: 1,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 9,
      file: "Source/app/shared/components/error-dialog/error-dialog.component.ts",
      length: 1,
      line: 320,
      lineText: "        ($(this.element.nativeElement.parentElement)).css('max-width', 'none');",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/components/error-dialog/error-dialog.component.ts",
          length: 6,
          line: 3,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 31,
      file: "Source/app/shared/components/expression-builder/expression-builder-dialog.component.ts",
      length: 1,
      line: 395,
      lineText: "        this.dialogContainer = $(this._element.nativeElement.parentElement.parentElement);",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/components/expression-builder/expression-builder-dialog.component.ts",
          length: 6,
          line: 25,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 21,
      file: "Source/app/shared/components/me-control/me-control.component.ts",
      length: 1,
      line: 190,
      lineText: "        const rect = $(this._eventTarget)[0].getBoundingClientRect();",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/components/me-control/me-control.component.ts",
          length: 6,
          line: 3,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 9,
      file: "Source/app/shared/components/message-dialog/message-dialog.component.ts",
      length: 1,
      line: 438,
      lineText: "        ($(this.element.nativeElement.parentElement)).css('max-width', 'none');",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/components/message-dialog/message-dialog.component.ts",
          length: 6,
          line: 3,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 31,
      file: "Source/app/shared/components/preview-dialog/preview-dialog.component.ts",
      length: 1,
      line: 120,
      lineText: "        this.dialogContainer = $(this._element.nativeElement.parentElement.parentElement);",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/components/preview-dialog/preview-dialog.component.ts",
          length: 6,
          line: 5,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 32,
      file: "Source/app/shared/components/resizable-draggable-dialog/resizable-draggable-dialog.component.ts",
      length: 1,
      line: 40,
      lineText: "        this._dialogContainer = $(this._element.nativeElement.parentElement.parentElement);",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/components/resizable-draggable-dialog/resizable-draggable-dialog.component.ts",
          length: 6,
          line: 3,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 15,
      file: "Source/app/shared/components/trigger-dependency-configure/trigger-dependency-utils.ts",
      length: 6,
      line: 17,
      lineText: "        return moment(inputDate).add(numDays * negativeOne, 'days')",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/components/trigger-dependency-configure/trigger-dependency-utils.ts",
          length: 11,
          line: 1,
          lineText: "import * as moment from 'moment-timezone';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 32,
      file: "Source/app/shared/components/trigger/trigger-add-range/trigger-add-range.component.ts",
      length: 6,
      line: 112,
      lineText: "        const startTimeMoment = moment(this.startTime);",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/components/trigger/trigger-add-range/trigger-add-range.component.ts",
          length: 11,
          line: 23,
          lineText: "import * as moment from 'moment';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 32,
      file: "Source/app/shared/components/trigger/trigger-configuration/trigger-configuration.component.ts",
      length: 1,
      line: 871,
      lineText: "        const invalidControls = $('#triggerForm').find('.error-message');",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/components/trigger/trigger-configuration/trigger-configuration.component.ts",
          length: 6,
          line: 16,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 14,
      file: "Source/app/shared/directives/aria-label.directive.ts",
      length: 1,
      line: 11,
      lineText: "            ? $(this._el.nativeElement).find(this.ariaLabelTo)",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/directives/aria-label.directive.ts",
          length: 6,
          line: 1,
          lineText: "import * as $ from 'jquery';",
          namespace: "",
          suggestion: "$",
                },
        text: "Consider changing \"$\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"$\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 8,
      file: "Source/app/shared/utils/column-type.util.ts",
      length: 6,
      line: 561,
      lineText: "    if (moment(value).isValid()) {",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/utils/column-type.util.ts",
          length: 11,
          line: 5,
          lineText: "import * as moment from 'moment';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 33,
      file: "Source/app/shared/utils/expression.util.ts",
      length: 6,
      line: 903,
      lineText: "    return momentToISO8601Format(moment().utc());",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/utils/expression.util.ts",
          length: 11,
          line: 3,
          lineText: "import * as moment from 'moment';",
          namespace: "",
          suggestion: "moment",
                },
        text: "Consider changing \"moment\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"moment\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "call-import-namespace",
    location: {
      column: 32,
      file: "Source/app/shared/utils/parameter.util.ts",
      length: 9,
      line: 141,
      lineText: "    const str = data.map((e) => stringify(e)).join('|');",
      namespace: "",
      suggestion: "",
        },
    notes: [
            {
        location: {
          column: 7,
          file: "Source/app/shared/utils/parameter.util.ts",
          length: 14,
          line: 11,
          lineText: "import * as stringify from 'json-stable-stringify';",
          namespace: "",
          suggestion: "stringify",
                },
        text: "Consider changing \"stringify\" to a default import instead:",
            },
        ],
    pluginName: "",
    text: "Calling \"stringify\" will crash at run-time because it's an import namespace object, not a function",
    },
    {
    detail: undefined,
    id: "",
    location: {
      column: 0,
      file: "Source/tsconfig.app.json",
      length: 0,
      line: 0,
      lineText: "",
      namespace: "file",
      suggestion: "",
        },
    notes: [
            {
        location: null,
        text: "To control ECMA version and features use the Browerslist configuration. For more information, see https://angular.io/guide/build#configuring-browser-compatibility",
            },
        ],
    pluginName: "angular-compiler",
    text: "TypeScript compiler options \"target\" and \"useDefineForClassFields\" are set to \"ES2022\" and \"false\" respectively by the Angular CLI.",
    },
    {
    detail: undefined,
    id: "",
    location: {
      column: 0,
      file: "Source/tsconfig.app.json",
      length: 0,
      line: 0,
      lineText: "",
      namespace: "file",
      suggestion: "",
        },
    notes: [
            {
        location: null,
        text: "To control ECMA version and features use the Browerslist configuration. For more information, see https://angular.io/guide/build#configuring-browser-compatibility",
            },
        ],
    pluginName: "angular-compiler",
    text: "TypeScript compiler options \"target\" and \"useDefineForClassFields\" are set to \"ES2022\" and \"false\" respectively by the Angular CLI.",
    },
]